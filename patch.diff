diff --git a/api/routes/analysis.py b/api/routes/analysis.py
index 968349f..9130490 100644
--- a/api/routes/analysis.py
+++ b/api/routes/analysis.py
@@ -107,8 +107,11 @@ async def get_incomplete_analyses(connection: Connection = get_db_connection):
 async def get_latest_complete_analyses(connection: Connection = get_db_connection):
     """Get "complete" analyses with the latest timestamp_completed"""
     atable = AnalysisTable(connection)
-    result = await atable.get_latest_complete_analyses()
-    return result
+    results = await atable.get_latest_complete_analyses()
+    for result in results:
+        result.sample_id = sample_id_format(result.sample_id)
+
+    return results


 @router.get(
@@ -121,5 +124,7 @@ async def get_latest_complete_analyses_by_type(
 ):
     """Get "complete" analyses with the latest timestamp_completed"""
     atable = AnalysisTable(connection)
-    result = await atable.get_latest_complete_analyses(analysis_type)
-    return result
+    results = await atable.get_latest_complete_analyses(analysis_type)
+    for result in results:
+        result.sample_id = sample_id_format(result.sample_id)
+    return results
diff --git a/db/python/tables/analysis.py b/db/python/tables/analysis.py
index f772b75..ccbd3ca 100644
--- a/db/python/tables/analysis.py
+++ b/db/python/tables/analysis.py
@@ -156,7 +156,7 @@ WHERE a.status='queued' OR a.status='in-progress'

     async def get_latest_complete_analyses(
         self, analysis_type: Optional[str] = None
-    ) -> Dict[Tuple[str, str], Analysis]:
+    ) -> List[Analysis]:
         """
         Gets details of analysis with status "completed", one per sample with the most
         recent timestamp
diff --git a/models/models/analysis.py b/models/models/analysis.py
index c6782bc..13fec5b 100644
--- a/models/models/analysis.py
+++ b/models/models/analysis.py
@@ -1,4 +1,4 @@
-from typing import Optional, List
+from typing import Optional, List, Union

 from pydantic.main import BaseModel

@@ -12,7 +12,7 @@ class Analysis(BaseModel):
     type: AnalysisType = None
     status: AnalysisStatus = None
     output: Optional[str] = None
-    sample_ids: List[int] = None
+    sample_ids: List[Union[str, int]] = None

     @staticmethod
     def from_db(**kwargs):
