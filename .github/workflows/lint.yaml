name: Lint
on: push

permissions: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      # used for generating API
      SM_DOCKER: samplemetadata:dev
    defaults:
      run:
        shell: bash -eo pipefail -l {0}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Install uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca #v6.0.1 (TODO same as cpg-flow)

      - name: Setup build env
        run: uv sync --group dev

      - name: 'install frontend deps'
        working-directory: ./web
        run: npm ci

      - name: 'check frontend formatting'
        working-directory: ./web
        run: npm run format:check

      - name: 'check frontend linting'
        working-directory: ./web
        run: npm run lint

      - name: 'build image'
        run: |
          docker build \
            --build-arg SM_ENVIRONMENT=local \
            --tag $SM_DOCKER \
            -f deploy/api/Dockerfile \
            .

      - name: Build + install packages
        run: |
          python regenerate_api.py
          uv sync --group dev
          uv pip install .
          mkdir .mypy_cache

      - name: pre-commit
        run: pre-commit run --all-files
